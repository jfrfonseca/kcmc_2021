version: "3.9"

services:

  heuristics:
    # Instances generator and heuristic optimizer
    command: '/app/run_heuristics.sh'
    build:
      dockerfile: DOCKERFILE
      context: .
    image: ${DOCKER_REPOSITORY}:latest
    environment:
      RESULTS_TARGET: 's3://kcmc-heuristic/2023/heuristic'
    volumes:
      - ./data:/data:rw
      - ./integer_linear_programs:/app/integer_linear_programs:ro

  gurobi:
    # GUROBI optimizer in given instances
    build:
      dockerfile: DOCKERFILE
      context: .
    image: ${DOCKER_REPOSITORY}:latest
    # command: '/app/run_gurobi.sh "KCMC;100 100 1;300 50 100;237599344;END" 1 1 single-flow -p 4'
    # command: '/app/run_gurobi.sh "KCMC;100 100 1;300 50 100;237599344;END" 1 1 single-flow -p 4 -e reuse-dinic -a i44i68i69i77i79i88i89i91i92i95i97i98i99'
    # command: '/app/run_gurobi.sh "KCMC;100 100 1;300 50 100;237599344;END" 1 1 multi-flow -p 4'
    command: '/app/run_gurobi.sh "KCMC;100_100_1;300_50_100;237599344;END" 1 1 multi-flow -p 4 -e reuse-dinic -a i44i68i69i77i79i88i89i91i92i95i97i98i99'
    environment:
      GRB_VERSION: 9.5.1
      GRB_CLIENT_LOG: 3
      PYTHONPATH: "/home/gurobi/src"
      RESULTS_TARGET: 's3://kcmc-heuristic/2023/gurobi'
    volumes:
      - ./integer_linear_programs:/app/integer_linear_programs:ro

  parser:
    profiles:
      - parser
    build:
      dockerfile: notebook.dockerfile
      context: .
    entrypoint: ["python", "-u", "/home/gurobi/src/parse_results.py"]
    environment:
      PYTHONPATH: "/home/gurobi/src"
    volumes:
      - ./data/results:/results:ro
      - ./data:/data:ro
      - ./src:/home/gurobi/src:rw
      - ./builds:/app:ro

  notebook:
    profiles:
      - notebook
    build:
      dockerfile: notebook.dockerfile
      context: .
    ports:
      - "8888:8888"
    environment:
      GRB_CLIENT_LOG: 3
      PYTHONPATH: "/src"
    volumes:
      - ${GUROBI_LICENSE_FILE}:/opt/gurobi/gurobi.lic:ro
<<<<<<< HEAD
      - ./data:/data:ro
      - ./src:/src:ro
      - ./builds:/app:ro
=======
      - ./data:/data:rw
      - /media/zeff/Peixe/DATA:/data/dynamodb_objs:ro
      - ./builds:/app:ro
      - ./analysis:/home/gurobi/0_analysis:rw
      - ./src:/home/gurobi/0_analysis/src:ro

  dataviz:
    profiles:
      - dataviz
      - notebook
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./dataviz/index.html:/usr/share/nginx/html/index.html:ro
      - ./dataviz/css:/usr/share/nginx/html/css:ro
      - ./dataviz/fonts:/usr/share/nginx/html/fonts:ro
      - ./dataviz/js:/usr/share/nginx/html/js:ro
      - ./dataviz/stylesheets:/usr/share/nginx/html/stylesheets:ro
      - ./data/visualizations:/usr/share/nginx/html/datasets:ro

# The services below were used for the instance probability study
#
#  redis:
#    profiles:
#      - redis
#      - generator
#      - parser
#    image: "redis:alpine"
#    command: redis-server /data/redis.conf
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./data:/data:rw
#
#  generator-random:
#    profiles:
#      - generator-random
#    depends_on:
#      - redis
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    command: "python -u /src/instance_generator_driver.py /data/instance_generator_configurations.csv 200 --clear-locks"
#    build:
#      dockerfile: instance_generator.dockerfile
#      context: .
#    volumes:
#      - ./data:/data:ro
#      - ./src:/src:ro
#    deploy:
#      mode: replicated
#      replicas: 15
#
#  parser:
#    profiles:
#      - parser
#    depends_on:
#      - redis
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    command: "python -u /src/kcmc_instance.py /data/instances.csv 15 host.docker.internal --no-parsing"
#    build:
#      dockerfile: instance_generator.dockerfile
#      context: .
#    volumes:
#      - ./data:/data:rw
#      - ./src:/src:ro
#
>>>>>>> f9862c6 (minor debugs)
