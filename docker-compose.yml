version: "3.9"

services:

  compiler:
    # Dockerized compiler environment
    profiles:
      - compiler
    build:
      dockerfile: compiler.dockerfile
      context: .
    command: bash /app/src/compiler_entrypoint.sh
    volumes:
      - ./CMakeLists.txt:/app/CMakeLists.txt:ro
      - ./src:/app/src:ro
      - ./builds:/app/builds:rw

  generator:
    # Instances generator
    profiles:
      - generator
    command: '/src/run_instance_generator.sh'
    build:
      dockerfile: instance_generator.dockerfile
      context: .
    volumes:
      - ./data:/data:rw
      - ./src:/src:ro

  preprocessor:
    profiles:
      - preprocessor
    build:
      dockerfile: gurobi.dockerfile
      context: .
    entrypoint: bash
    command: "/home/gurobi/src/run_optimizer_dinic.sh"
    environment:
      GRB_CLIENT_LOG: 3
      PYTHONPATH: "/home/gurobi/src"
    volumes:
      - ./data:/data:ro
      - ./src:/home/gurobi/src:ro
      - ./analysis/results/preprocessor:/results:rw
      - ./builds:/app:ro

  optimizer:
    profiles:
      - gurobi
      - optimizer
    build:
      dockerfile: gurobi.dockerfile
      context: .
    command: "python -u /home/gurobi/src/gurobi_optimizer.py --results s3://kcmc-heuristic/2022-05"
    environment:
      GRB_CLIENT_LOG: 3
      PYTHONPATH: "/home/gurobi/src"
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${AWS_SECRET_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ${GUROBI_LICENSE_FILE}:/opt/gurobi/gurobi.lic:ro
      - ./data:/data:ro
      - ./src:/home/gurobi/src:ro
      - ./analysis/results/optimizer:/results:rw
      - ./builds:/app:ro

  notebook:
    profiles:
      - notebook
    build:
      dockerfile: notebook.dockerfile
      context: .
    ports:
      - "8888:8888"
    environment:
      GRB_CLIENT_LOG: 3
      PYTHONPATH: "/home/gurobi/0_analysis/src"
    volumes:
      - ${GUROBI_LICENSE_FILE}:/opt/gurobi/gurobi.lic:ro
      - ./data:/data:rw
      - /media/zeff/Peixe/DATA:/data/dynamodb_objs:ro
      - ./builds:/app:ro
      - ./analysis:/home/gurobi/0_analysis:rw
      - ./src:/home/gurobi/0_analysis/src:ro

  dataviz:
    profiles:
      - dataviz
      - notebook
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./dataviz/index.html:/usr/share/nginx/html/index.html:ro
      - ./dataviz/css:/usr/share/nginx/html/css:ro
      - ./dataviz/fonts:/usr/share/nginx/html/fonts:ro
      - ./dataviz/js:/usr/share/nginx/html/js:ro
      - ./dataviz/stylesheets:/usr/share/nginx/html/stylesheets:ro
      - ./data/visualizations:/usr/share/nginx/html/datasets:ro

# The services below were used for the instance probability study
#
#  redis:
#    profiles:
#      - redis
#      - generator
#      - parser
#    image: "redis:alpine"
#    command: redis-server /data/redis.conf
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./data:/data:rw
#
#  generator-random:
#    profiles:
#      - generator-random
#    depends_on:
#      - redis
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    command: "python -u /src/instance_generator_driver.py /data/instance_generator_configurations.csv 200 --clear-locks"
#    build:
#      dockerfile: instance_generator.dockerfile
#      context: .
#    volumes:
#      - ./data:/data:ro
#      - ./src:/src:ro
#    deploy:
#      mode: replicated
#      replicas: 15
#
#  parser:
#    profiles:
#      - parser
#    depends_on:
#      - redis
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    command: "python -u /src/kcmc_instance.py /data/instances.csv 15 host.docker.internal --no-parsing"
#    build:
#      dockerfile: instance_generator.dockerfile
#      context: .
#    volumes:
#      - ./data:/data:rw
#      - ./src:/src:ro
#
